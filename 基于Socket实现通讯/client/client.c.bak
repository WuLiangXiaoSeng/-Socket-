#include "client.h"
#include "ui.h"

char self[12];


/*
 *
 *
 *
 *
 *
 *
 */
int init_client(){
	struct sockaddr_in ser_addr;
	int comm_sock;
	int res;

	comm_sock = socket(AF_INET, SOCK_STREAM, 0);
	
	ser_addr.sin_family = AF_INET;
	ser_addr.sin_addr.s_addr = inet_addr("127.0.0.1");
	ser_addr.sin_port = 9999;

	res = connect(comm_sock, (struct sockaddr*)&ser_addr, sizeof(struct sockaddr));
	if(res == -1){
		printf("连接失败，退出\n");
		exit(-1);
	}
	return comm_sock;
}


/*
 *函数名: login()
 *参数：初始化的 socket
 *描述：客户端登录函数,command 
 *	command = 1,sendto = login, mess = login, self = scanf()
 *返回值：
 */
void login(int comm_sock){
	int msglen;
	msg sendmsg;
	msglen=sizeof(msg);
	memset(&sendmsg,'\0',msglen);
	memset(self,'\0',12);

	sendmsg.command=1;

	strcpy(sendmsg.sendto,"login");

	strcpy(sendmsg.mess,"login");

	scanf("%s",self);

	strcpy(sendmsg.self,self);

	write(comm_sock,&sendmsg,msglen);
}


/*
 *函数名；	chat_read()
 *描述：	聊天过程中读线程
 *参数：	comm_sock
 *返回值：
 *
 */
void *chat_read(void *p){
	int comm_sock = *(int*)p;

	msg mymsg;
	int len;

	len = sizeof(msg);
	while(1){
		memset(&mymsg,  '\0', len);
		read(comm_sock, &mymsg, len);
		printf("%s send to self : %s\n", mymsg.self, mymsg.mess);
		if(strcmp(mymsg.mess, "exit") == 0) 
			break;
	}
}


int main(){
	
	LoginUI();
	

	int comm_sock;
	pthread_t tid;
	void *r;
	int len;
	msg sendmsg;

	comm_sock = init_client();
	login(comm_sock);
	pthread_create(&tid, 0, chat_read, (void*)(&comm_sock));
	len = sizeof(msg);
	while(1){
		memset(&sendmsg, '\0', len);
		scanf("%d", &sendmsg.command);
		scanf("%s", sendmsg.sendto);
		scanf("%s", sendmsg.mess);
		strcpy(sendmsg.self, self);
		write(comm_sock, &sendmsg, len);
		if(strcmp(sendmsg.mess, "exit") == 0) 
			break;
	}

	pthread_join(tid, &r);

}
